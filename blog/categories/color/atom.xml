<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Color | Mitja Bezenšek]]></title>
  <link href="http://bezensek.com/blog/categories/color/atom.xml" rel="self"/>
  <link href="http://bezensek.com/"/>
  <updated>2014-08-15T18:34:01+02:00</updated>
  <id>http://bezensek.com/</id>
  <author>
    <name><![CDATA[Mitja Bezenšek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Excel VSTO RGB Color Bug]]></title>
    <link href="http://bezensek.com/blog/2014/08/05/excel-rgb-color-bug/"/>
    <updated>2014-08-05T10:45:04+02:00</updated>
    <id>http://bezensek.com/blog/2014/08/05/excel-rgb-color-bug</id>
    <content type="html"><![CDATA[<p>One of the strangest bugs I found in VSTO for Excel is the one that deals with assigning colors to the RGB property of the ChartFormat object. The ChartFormat object is used in multiple places of Excel. Let&rsquo;s look at an example:
<code>csharp
Series series = Globals.ThisAddIn.Application.Selection;
series.Format.Fill.ForeColor.RGB = Color.Red.ToArgb();
</code>
For brevity&rsquo;s sake let&rsquo;s suppose that we have a series of a chart selected and we run the code above. One would expect that the color of the selected series would be set to red, but what happens is this:</p>

<p><img src="/img/chart.png" title="&lsquo;Chart&rsquo; &lsquo;Chart&rsquo;" ></p>

<!-- more -->


<p>And if we try to color the series blue then the result is red!</p>

<h1>Red and Blue components of the RGB property are reversed</h1>

<p>Since I intentionally used the red color that resulted in a blue series on the chart, some of you might have figured out the bug. But imagine yourself trying to apply some color from the middle of the RGB color range and consitently getting the wrong results.</p>

<p>Well the workaround is easy: just use a wrapper function that swaps the red and blue components of the color:</p>

<pre><code class="csharp">private void ApplyColorToSeries(){
    Series series = Globals.ThisAddIn.Application.Selection;
    series.Format.Fill.ForeColor.RGB = InteropColor(255, 0, 0);
}

public int InteropColor(int red, int green, int blue){
    return Color.FromArgb(blue, green, red).ToArgb();
}
</code></pre>

<p>After searching the web I found that this bug has already been mentioned on the <a href="http://stackoverflow.com/questions/7423456/changing-an-excel-cells-backcolor-using-hex-results-in-excel-displaying-complet">StackOverflow</a>. It is interesting that this has not yet been fixed in the newer versions of Excel. I have first stumbled upon this issue with the Excel 2007 interop library but it is still present in the current one. The only reason that comes to my mind is backwards compatibility with the numerous Excel solutions out there. So it seems we should just get used to it.</p>

<h3>Update:</h3>

<p>It seems that this is not an Excel interop bug. Apparently the reason for this strange behavior is that VBA has a different representation of colors. For more see the comments.</p>
]]></content>
  </entry>
  
</feed>
