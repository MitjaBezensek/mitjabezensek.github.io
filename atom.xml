<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mitja Bezenšek]]></title>
  <link href="http://bezensek.com/atom.xml" rel="self"/>
  <link href="http://bezensek.com/"/>
  <updated>2014-07-23T19:24:34+02:00</updated>
  <id>http://bezensek.com/</id>
  <author>
    <name><![CDATA[Mitja Bezenšek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Excel's ActivePane Index property bug and a workaround]]></title>
    <link href="http://bezensek.com/blog/2014/07/23/excel-activepane-index-property-bug-and-a-workaround/"/>
    <updated>2014-07-23T11:20:04+02:00</updated>
    <id>http://bezensek.com/blog/2014/07/23/excel-activepane-index-property-bug-and-a-workaround</id>
    <content type="html"><![CDATA[<p>In <a href="http://zebra.bi/">Zebra BI</a> we are positioning our custom WPF forms on top of the Excel window in order to offer a richer and more contextual UI. Calculating the exact position for the forms is quite complex and painful, due to things like:</p>

<ul>
<li>detecting the Excel window state and left edge position</li>
<li>calculating from points to pixels <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
<li>coping with the Windows DPI</li>
<li>taking Ribbon / Formula Bar / Excel version into consideration</li>
<li>serious lack of events on many of Excel&rsquo;s objects</li>
<li>&hellip;</li>
</ul>


<p>The last nail in the coffin were the Panes which also need to be considered when a user uses the Freeze Panes option, which basically splits the worksheet into 2 or 4 Panes. At first it seemed like a simple adjustment until I started digging into the object model and ultimately found out that:</p>

<!-- more -->


<h1>ActivePane&rsquo;s Index property doesn&rsquo;t work correctly</h1>

<p>According to the <a href="http://msdn.microsoft.com/en-us/library/office/microsoft.office.interop.excel.window.activepane%28v=office.15%29.aspx">Excel Object Model</a> specification the ActivePane property:</p>

<blockquote><p>Returns a <strong>Pane</strong> object that represents the <strong>active pane</strong> in the <strong>window</strong>.</p></blockquote>

<p>and you can:</p>

<blockquote><p>Use the <strong>Index</strong> property to obtain the <strong>index</strong> of the <strong>active pane</strong>.</p></blockquote>

<p>Here is a simple code that is used to display the index of the current ActivePane:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">window</span> <span class="p">=</span> <span class="n">Globals</span><span class="p">.</span><span class="n">ThisAddIn</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">ActiveWindow</span><span class="p">;</span>
</span><span class='line'><span class="kt">var</span> <span class="n">activePane</span> <span class="p">=</span> <span class="n">window</span><span class="p">.</span><span class="n">ActivePane</span><span class="p">;</span>
</span><span class='line'><span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">activePane</span><span class="p">.</span><span class="n">Index</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s see it in action.</p>

<p><img src="http://bezensek.com/img/ActivePane.gif" title="ActivePane" alt="ActivePane"></p>

<p>As you see when there are 2 panes it <strong>always returns 2</strong> and when we have 4 panes it <strong>always returns 4</strong>. I&rsquo;m guessing it is just returning the number of the panes :)</p>

<h1>The workaround</h1>

<p>I needed to determine in which of the Panes is the current selection so I started looking at the Panes members. The only promising one was the <code>VisibleRange</code>. I didn&rsquo;t want to use the Excel function <code>INTERSECT</code> since is quite costly performance wise. I figured out that just comparing the <code>Left</code> property of the <code>VisibleRange</code> with the <code>Left</code> property of the current selection should be enough (the same for the <code>Top</code> property). So I came up with this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="kt">int</span> <span class="nf">GetPaneIndex</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">Range</span> <span class="n">selection</span> <span class="p">=</span> <span class="n">Globals</span><span class="p">.</span><span class="n">ThisAddIn</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">Selection</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">window</span> <span class="p">=</span> <span class="n">Globals</span><span class="p">.</span><span class="n">ThisAddIn</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">ActiveWindow</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">paneCount</span> <span class="p">=</span> <span class="n">window</span><span class="p">.</span><span class="n">Panes</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">paneCount</span> <span class="p">==</span> <span class="m">2</span><span class="p">){</span>
</span><span class='line'>        <span class="n">Pane</span> <span class="n">secondPane</span> <span class="p">=</span> <span class="n">window</span><span class="p">.</span><span class="n">Panes</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">secondPane</span><span class="p">.</span><span class="n">ScrollRow</span> <span class="p">&gt;</span> <span class="m">1</span>
</span><span class='line'>          <span class="p">&amp;&amp;</span> <span class="n">secondPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Top</span> <span class="p">&lt;</span> <span class="n">selection</span><span class="p">.</span><span class="n">Top</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">secondPane</span><span class="p">.</span><span class="n">ScrollColumn</span> <span class="p">&gt;</span> <span class="m">1</span>
</span><span class='line'>          <span class="p">&amp;&amp;</span> <span class="n">secondPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Left</span> <span class="p">&lt;</span> <span class="n">selection</span><span class="p">.</span><span class="n">Left</span><span class="p">)</span>
</span><span class='line'>           <span class="k">return</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">paneCount</span> <span class="p">==</span> <span class="m">4</span><span class="p">){</span>
</span><span class='line'>        <span class="n">Pane</span> <span class="n">secondPane</span> <span class="p">=</span> <span class="n">window</span><span class="p">.</span><span class="n">Panes</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
</span><span class='line'>        <span class="n">Pane</span> <span class="n">thirdPane</span> <span class="p">=</span> <span class="n">window</span><span class="p">.</span><span class="n">Panes</span><span class="p">[</span><span class="m">3</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">selection</span><span class="p">.</span><span class="n">Left</span> <span class="p">&lt;</span> <span class="n">secondPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Left</span>
</span><span class='line'>          <span class="p">&amp;&amp;</span> <span class="n">selection</span><span class="p">.</span><span class="n">Top</span> <span class="p">&lt;</span> <span class="n">thirdPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Top</span><span class="p">)</span>
</span><span class='line'>           <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">selection</span><span class="p">.</span><span class="n">Left</span> <span class="p">&gt;</span> <span class="n">secondPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Left</span>
</span><span class='line'>          <span class="p">&amp;&amp;</span> <span class="n">selection</span><span class="p">.</span><span class="n">Top</span> <span class="p">&gt;</span> <span class="n">thirdPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Top</span><span class="p">)</span>
</span><span class='line'>           <span class="k">return</span> <span class="m">4</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">selection</span><span class="p">.</span><span class="n">Left</span> <span class="p">&gt;</span> <span class="n">secondPane</span><span class="p">.</span><span class="n">VisibleRange</span><span class="p">.</span><span class="n">Left</span> <span class="p">)</span>
</span><span class='line'>           <span class="k">return</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="m">3</span><span class="p">;</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>     <span class="k">return</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This works just fine with <code>Ranges</code> and pretty much every Excel object that has <code>Left</code> and <code>Top</code> properties. You get the correct index of the <code>ActivePane</code>.</p>

<p>However, what you also get, are some triggered events as soon as you access the VisibleRange property. I have no clue why this happens. Even a simple assigment like <code>var range = pane.VisibleRange;</code> causes the active chart to get deactivated, which again caused quite a few additional problems that are beyond the scope of this post.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Since the <code>PointsToScreenPixels</code> method is bugged as well.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The best way to get to know Excel Object Model]]></title>
    <link href="http://bezensek.com/blog/2014/03/24/the-best-way-to-get-to-know-excel-object-model/"/>
    <updated>2014-03-24T21:10:04+01:00</updated>
    <id>http://bezensek.com/blog/2014/03/24/the-best-way-to-get-to-know-excel-object-model</id>
    <content type="html"><![CDATA[<p>I am starting a category called &ldquo;excel Excel&rdquo; which will contain useful tips and tricks for Excel. It will be mostly directed towards Excel developers and power users.</p>

<h1>How do I [blank] in Excel?</h1>

<p><a href="http://stackoverflow.com/">StackOverflow</a> is full of questions like:</p>

<blockquote><p>&ldquo;How do I change the color of a Chart Series in Excel in VBA / C#?&rdquo;</p></blockquote>

<p>While doing it manually is easy, the problem occurs when you wish to start talking to Excel from the code. This is not surprising, considering the number of different objects present in the <a href="http://msdn.microsoft.com/en-us/library/wss56bz7.aspx">Excel Object Model</a>. One can spend an insane amount of time trying to figure out the exact five steps to reach the desired effect. It is easy to get lost in all the objects, and their methods and properties. Which is why I love the <strong>macro recording option</strong>.</p>

<!-- more -->


<p>After learning about it you will be able to do all the tasks you already know how to do manually in code as well. Well, almost all. I&rsquo;ll write about this in a future post.</p>

<p>The primary use of macro recording is to <strong>automate repetitive tasks</strong>. You just start the recording, perform the task and stop the recording. After that you can replay the recorded macro as many times as you wish. And not only that, you can also <strong>see all the steps</strong> that were performed in code!</p>

<h1>How to record a macro</h1>

<p>First of all I recommend that you show the Developer ribbon tab. You can do this under File | Options | Customize Ribbon, where you need to check the Developer ribbon tab:</p>

<p><img src="http://bezensek.com/img/enableDeveloperRibbon.png" title="Enable developer ribbon" alt="Enable developer ribbon"></p>

<p>After enabling the tab you gain access to macro recording and viewing options. You are now ready to record your first macro:</p>

<ol>
<li>Click on the Record macro button under Developer tab</li>
<li>Perform the selected task, like changing a color of a Chart Series</li>
<li>Stop the macro recording</li>
<li>View the results</li>
</ol>


<p><img src="http://bezensek.com/img/recordMacro.gif" title="Record macro Excel" alt="Record macro Excel"></p>

<p>As you can see at the end of the animation all of the steps that I performed during the recording are saved in the macro. It is now easy to find the object / property you need. I use this extensively, almost every day. It mainly serves as a way of finding the specific object / property to set, after which I use the Intellisense to explore the options a bit further.</p>

<p> <strong>Tip:</strong></p>

<blockquote><p>If you will be using the described technique as much as I do, I even recommend adding it to the Quick Access Toolbar. Click on the arrows in the Toolbar, Select More commands and then add Record macro and View macro commands to your Toolbar:</p></blockquote>

<p> <img src="http://bezensek.com/img/quickAccess.png" title="Quick access toolbar customization" alt="Quick access toolbar customization"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git with Visual Studio]]></title>
    <link href="http://bezensek.com/blog/2014/03/06/using-git-with-visual-studio/"/>
    <updated>2014-03-06T21:30:35+01:00</updated>
    <id>http://bezensek.com/blog/2014/03/06/using-git-with-visual-studio</id>
    <content type="html"><![CDATA[<p>Source code needs to be under <a href="http://www.joelonsoftware.com/articles/fog0000000043.html">version control</a>, period. When it comes to deciding which system to use, <a href="http://en.wikipedia.org/wiki/Git_%28software%29">Git</a> is one of the options. There are many <a href="http://stackoverflow.com/questions/871/why-is-git-better-than-subversion/875#875">heated debates</a> which one is the best, but let&rsquo;s not go into that. All of them do their job, so it mostly comes down to personal preference. I like Git.</p>

<p><img src="http://bezensek.com/img/gitflow.png" title="Gitflow" alt="Gitflow">
</br>
<sup><a href="http://nvie.com/posts/a-successful-git-branching-model/">Image source</a></sup></p>

<!-- more -->


<h1>Git in Visual Studio</h1>

<p>In January 2013 the Visual Studio team <a href="http://blogs.msdn.com/b/bharry/archive/2013/01/30/git-init-vs.aspx">announced</a> that Visual Studio will have Git support and you can download it from <a href="http://visualstudiogallery.msdn.microsoft.com/abafc7d6-dcaa-40f4-8a5e-d6724bdb980c">here</a> if you want. You will need Visual Studio 2012 Update 2 at least.</p>

<p>I have tried the extension but I don&rsquo;t recommend it just yet. It is still lacking many features and it seems very rushed. In a few iterations it might be worth to install it but for now I would say stay away. This is why I decided to discuss possible alternatives, namely: command line, Git Extensions and Source Tree.</p>

<h1>Command line</h1>

<p>So how can you start using Git? The easiest way in terms of required software is the command line. First of all you need to <a href="http://git-scm.com/downloads">download</a> and install Git. After that you just need to <a href="http://git-scm.com/doc">read the documenation</a> and you can immediately start using it from the command line.</p>

<p>And that is a good way to start using it if you are not familiar with it. Since you have to type in all the commands you will think twice if this is the right thing to do. And you won&rsquo;t get overwhelmed by all the possible commands. You will learn one or two commands and really get to know those. For starters you just need <code>init</code> and <code>commit</code>. Soon after that you will want to save the source code on another computer, not only on your own. That&rsquo;s when <code>remotes</code>, <code>push</code> and <code>pull</code> come into play. And when you start to work in a team, sharing the code, you will need to learn about <code>branches</code> and maybe even about branching models like <a href="http://nvie.com/posts/a-successful-git-branching-model/">GitFlow</a> for example.</p>

<p>Does this work with Visual Studio. Absolutely. That&rsquo;s why I don&rsquo;t understand why so much fuss about Git being incorporated into Visual Studio. Many developers only use git from the command line. Some would even argue that that&rsquo;s the only way to use it. I understand that commiting directly from the IDE is probably faster and that visual representation of the branch tree is nice. However, writting a few additional lines every day sholdn&rsquo;t keep you from using Git!</p>

<h1>Git Extensions</h1>

<p>The next option is a Visual Studio extension called <a href="https://code.google.com/p/gitextensions/">Git Extensions</a>. It&rsquo;s the only one of the three alternatives that I mention that is completely integrated into Visual Studio. After installing you get an additional toolbar in your workspace:</p>

<p><img src="http://bezensek.com/img/gitExtensions.png" title="Git Extensions toolbar" alt="Git Extensions toolbar"></p>

<p>The most used commands are directly exposed on the toolbar, but you can open up a window where all git commands are only a click away. You can also see your branch tree and commit messages.</p>

<p><img src="http://bezensek.com/img/gitExtensions2.png" title="Git Extensions window" alt="Git Extensions window"></br>
<sup><a href="https://code.google.com/p/gitextensions/">Image source</a></sup></p>

<p>If you like the integrated way you might also want to check <a href="http://visualstudiogallery.msdn.microsoft.com/63a7e40d-4d71-4fbb-a23b-d262124b8f4c">Git Source Control Provider</a> which allows you to see the status of your files in the solution explorer. It makes it easy to see which files were newly added, which were changed,&hellip;</p>

<p>I&rsquo;ve had some minor problems with Git Extensions. Sometimes the window crashed if I had it opened for too long. I also ran into some authentication problems when pushing to Bitbucket. This problem was solved by manually running their git-credentials-windstore executable. Apart from that I quite liked it. It is really rich with options and possibilities and also works remarkably well.</p>

<h1>Source Tree</h1>

<p>The last option is a standalone desktop application called <a href="http://www.sourcetreeapp.com/">Source Tree</a> from Atlassian. While the Mac version has been around for quite some while they have released the Windows version not so long ago.</p>

<p><img src="http://www.sourcetreeapp.com/images/sourcetree_hero_win_full_interface_windows.png" title="Source tree UI " alt="Source Tree UI"></br>
<sup><a href="http://www.sourcetreeapp.com">Image source</a></sup></p>

<p>I must admit that lately I&rsquo;ve been using Source tree the most. I really like the nice user interface, it is also very easy to keep track of multiple projects. And there is another little gem: it has support for Gitflow. So you can easily start new features, hotfixes, releases.</p>

<p><img src="http://bezensek.com/img/sourceTree2.png" title="Gitflow options inside of Source Tree" alt="Gitflow options inside of Source Tree"></p>

<p>So until the Visual Studio team improves their extension I think any of the three proposed options is better. Once again it will come down to personal preference. Do you want visual control or do you like command line? Do you want to have integration with Visual Studio or is a standalone application also ok?</p>
]]></content>
  </entry>
  
</feed>
